name: Build macOS Binary

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: macos-14
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Python from Python.org
        run: |
          curl -o python.pkg https://www.python.org/ftp/python/3.9.6/python-3.9.6-macos11.pkg
          sudo installer -pkg python.pkg -target /

      - name: Debug Python Framework
        run: |
          ls -l /Library/Frameworks/Python.framework/Versions/3.9 || echo "Python framework not found"

      - name: Recreate Virtual Environment (x86_64)
        run: |
          rm -rf venv
          arch -x86_64 /Library/Frameworks/Python.framework/Versions/3.9/bin/python3 -m venv venv
          source venv/bin/activate
          arch -x86_64 pip install --no-cache-dir --force-reinstall -r requirements.txt

      - name: Install PyInstaller and Streamlit
        run: |
          source venv/bin/activate
          arch -x86_64 pip install pyinstaller streamlit

      - name: Debug Installed Dependencies
        run: |
          source venv/bin/activate
          pip freeze

      - name: Regenerate Spec File
        run: |
          source venv/bin/activate
          arch -x86_64 pyinstaller --name=mumma_converter --onefile --specpath . --add-data "main.py:." wrapper.py

      - name: Debug Spec File
        run: |
          ls -l mumma_converter.spec || echo "mumma_converter.spec not found"
          
      - name: Ensure Streamlit is Executable
        run: |
          chmod +x venv/bin/streamlit
        
      - name: Build Binary with PyInstaller
        run: |
          source venv/bin/activate
          STREAMLIT_PATH=$(find venv/bin -name streamlit)
          arch -x86_64 pyinstaller --target-arch=x86_64 --name=mumma_converter --onefile \
            --add-data "main.py:." \
            --add-binary "$STREAMLIT_PATH:streamlit" \
            --hidden-import streamlit \
            --hidden-import streamlit.runtime.scriptrunner \
            wrapper.py

      - name: Debug dist Directory
        run: |
          echo "Contents of dist directory:"
          ls -l dist

      - name: Package the Binary
        run: |
          mkdir -p release  
          tar -czvf release/mumma_converter-macOS.tar.gz -C dist mumma_converter

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mumma_converter-macOS
          path: release/mumma_converter-macOS.tar.gz


  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: mumma_converter-macOS

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Upload Release Asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          tag: ${{ github.ref_name }}
          file: mumma_converter-macOS.tar.gz
