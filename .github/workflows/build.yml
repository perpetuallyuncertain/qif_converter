name: Build macOS Installer

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: macos-14
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Python from Python.org
        run: |
          curl -o python.pkg https://www.python.org/ftp/python/3.9.6/python-3.9.6-macos11.pkg
          sudo installer -pkg python.pkg -target /

      - name: Debug Python Installation
        run: |
          file /Library/Frameworks/Python.framework/Versions/3.9/bin/python3
          /Library/Frameworks/Python.framework/Versions/3.9/bin/python3 --version

      - name: Create Virtual Environment with Universal Python
        run: |
          rm -rf venv
          /Library/Frameworks/Python.framework/Versions/3.9/bin/python3 -m venv venv
          source venv/bin/activate
          pip install --no-cache-dir py2app streamlit pandas

      - name: Debug Installed Dependencies
        run: |
          source venv/bin/activate
          pip freeze

      - name: Build macOS Application with py2app
        run: |
          source venv/bin/activate
          python setup.py py2app -q || echo "py2app failed!"
        
      - name: Debug Dist Directory
        run: |
          echo "Contents of dist directory:"
          ls -l dist || echo "dist directory not found"
          echo "Contents of the .app bundle (if created):"
          ls -l dist/Mumma_Converter.app || echo "Mumma_Converter.app not found"

      - name: Verify `.app` Structure
        run: |
          echo "Checking .app structure:"
          ls -l "dist/Mumma_Converter.app/Contents"
          ls -l "dist/Mumma_Converter.app/Contents/MacOS"
          ls -l "dist/Mumma_Converter.app/Contents/Resources"
        
      
      - name: Create Release Directory
        run: mkdir -p release
        
      - name: Create DMG Installer
        run: |
          brew install create-dmg
          APP_PATH="$(pwd)/dist/Mumma_Converter.app"
          OUTPUT_DIR="$(pwd)/release"
          OUTPUT_FILENAME="Mumma_Converter_Installer.dmg"
      
          echo "Using APP_PATH=$APP_PATH"
          echo "Using OUTPUT_DIR=$OUTPUT_DIR"
          echo "Using OUTPUT_FILENAME=$OUTPUT_FILENAME"
      
          create-dmg \
            --volname "Mumma Converter" \
            --window-size 500 300 \
            --icon-size 100 \
            --app-drop-link 300 150 \
            "$APP_PATH" \
            "$OUTPUT_DIR/$OUTPUT_FILENAME"
      
      - name: Upload DMG Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Mumma_Converter_Installer.dmg
          path: release/Mumma_Converter_Installer.dmg


  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: Mumma_Converter_Installer.dmg

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Upload Release Asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          tag: ${{ github.ref_name }}
          file: Mumma_Converter_Installer.dmg
