name: Build macOS Installer

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: macos-14
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Python and Dependencies with Homebrew
        run: |
          echo "Installing Python via Homebrew..."
          brew install python@3.9
          echo "Python installed:"
          python3 --version
          which python3

      - name: Create Virtual Environment with Brew-installed Python
        run: |
          rm -rf venv
          /opt/homebrew/bin/python3.9 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install --no-cache-dir -r requirements.txt
        

      - name: Install py2app
        run: |
          echo "Installing py2app..."
          source venv/bin/activate
          pip install py2app

      - name: Upgrade Build Tools
        run: |
          source venv/bin/activate
          pip install --upgrade setuptools wheel
        

      - name: Build macOS Application
        run: |
          source venv/bin/activate
          pip install --upgrade py2app
          python setup.py py2app
        

      - name: Verify Application Bundle Structure
        run: |
          echo "Verifying .app structure..."
          ls -l dist/Mumma_Converter.app/Contents
          ls -l dist/Mumma_Converter.app/Contents/MacOS
          ls -l dist/Mumma_Converter.app/Contents/Resources

      - name: Create DMG Installer
        run: |
          echo "Creating DMG..."
          brew install create-dmg
          APP_PATH="$(pwd)/dist/Mumma_Converter.app"
          OUTPUT_DIR="$(pwd)/release"
          OUTPUT_FILENAME="Mumma_Converter_Installer.dmg"
          mkdir -p "$OUTPUT_DIR"
          create-dmg \
            --volname "Mumma Converter" \
            --window-size 500 150 \
            --icon-size 60 \
            --app-drop-link 300 250 \
            "$OUTPUT_DIR/$OUTPUT_FILENAME" \
            "$APP_PATH"

      - name: Test Packaged App
        run: |
          echo "Testing packaged app..."
          brew install coreutils
          hdiutil attach release/Mumma_Converter_Installer.dmg
          cd /Volumes/Mumma\ Converter/Mumma_Converter.app/Contents/MacOS
          OUTPUT_LOG="$GITHUB_WORKSPACE/app_output.log"
          ERROR_LOG="$GITHUB_WORKSPACE/app_error.log"
          gtimeout 120 ./Mumma_Converter > "$OUTPUT_LOG" 2> "$ERROR_LOG" || echo "App failed or hung. See logs below."
          echo "==== Application Output ===="
          cat "$OUTPUT_LOG" || echo "No standard output captured."
          echo "==== Application Errors ===="
          cat "$ERROR_LOG" || echo "No error output captured."
          hdiutil detach /Volumes/Mumma\ Converter || hdiutil detach -force /Volumes/Mumma\ Converter || echo "Failed to detach the DMG."

      - name: Upload DMG Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Mumma_Converter_Installer.dmg
          path: release/Mumma_Converter_Installer.dmg

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: Mumma_Converter_Installer.dmg

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          file: Mumma_Converter_Installer.dmg
